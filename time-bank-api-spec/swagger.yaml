openapi: 3.0.0
info:
  title: Timebank
  description: Timebank API documentation
  version: '1.0'

security:
  - bearerAuth: []

paths:
  /v1/system/ping:
    get:
      operationId: ping
      summary: Replies with pong
      description: Replies ping with pong
      tags:
        - System
      responses:
        "200":
          description: Pong
          content:
            text/plain:
              schema:
                type: string

  /v1/users:
    get:
      operationId: listUsers
      summary: Get list of keycloak users.
      description: Get list of keycloak users.
      tags:
        - Users
      responses:
        "200":
          description: Get list of keycloak users
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/User"
        "default":
          description: Invalid request was sent to the server.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /v1/users/{userId}:
    get:
      operationId: findUser
      summary: Find user by keycloak id
      description: Finds user by keycloak id in keycloak.
      tags:
        - Users
      parameters:
        - name: userId
          in: path
          required: true
          description: Users ID in Keycloak
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Found User information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        "default":
          description: Invalid request was sent to the server.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /v1/persons:
    get:
      deprecated: true
      operationId: listPersons
      summary: Get list of Timebank persons.
      description: Get list of Timebank persons. (Deprecated, use /v1/users)
      tags:
        - Persons
      parameters:
        - name: active
          in: query
          description: Filter by persons active state
          schema:
            type: boolean
      responses:
        "200":
          description: Get list of Timebank persons.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Person"
        "default":
          description: Invalid request was sent to the server.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /v1/persons/{personId}:
    put:
      operationId: updatePerson
      summary: Updates Person attributes.
      description: Updates Person attributes in Keycloak.
      tags:
        - Persons
      parameters:
        - name: personId
          in: path
          required: true
          description: personId
          schema:
            type: integer
            format: int32
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Person'

      responses:
        "200":
          description: Updated Person information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Person'
        "default":
          description: Invalid request was sent to the server.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /v1/dailyEntries:
    get:
      operationId: listDailyEntries
      summary: Lists daily entries.
      description: Lists daily entries.
      tags:
        - DailyEntries
      parameters:
        - name: personId
          required: false
          in: query
          description: Filter by persons unique ID
          schema:
            type: integer
            format: int32
        - name: before
          required: false
          in: query
          description: Retrieve daily entries before given date.
          schema:
            type: string
            format: date
        - name: after
          required: false
          in: query
          description: Retrieve daily entries after given date.
          schema:
            type: string
            format: date
        - name: vacation
          required: false
          in: query
          description: Filter vacations
          schema:
            type: boolean
      responses:
        "200":
          description: List of daily entries.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DailyEntry'
        "default":
          description: Invalid request was sent to the server.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /v1/timeEntries:
    get:
      operationId: listTimeEntries
      summary: Lists time entries.
      description: Lists time entries.
      tags:
        - TimeEntries
      parameters:
        - name: personId
          required: false
          in: query
          description: Filter by persons unique ID
          schema:
            type: integer
            format: int32
        - name: before
          required: false
          in: query
          description: Retrieve time entries before given date.
          schema:
            type: string
            format: date
        - name: after
          required: false
          in: query
          description: Retrieve time entries after given date.
          schema:
            type: string
            format: date
        - name: vacation
          required: false
          in: query
          description: Filter vacations
          schema:
            type: boolean
      responses:
        "200":
          description: List of time entries.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TimeEntry'
        "default":
          description: Invalid request was sent to the server.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /v1/timeEntries/{id}:
    delete:
      operationId: deleteTimeEntry
      summary: Delete a time entry.
      description: Deletes a time entry.
      tags:
        - TimeEntries
      parameters:
        - name: id
          required: true
          in: path
          description: TimeEntry id
          schema:
            type: string
            format: uuid
      responses:
        "204":
          description: Empty response indicating successful removal.
        "default":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /v1/forecastWebhook:
    post:
      operationId: forecastWebhook
      summary: Handle deleted time entries from Forecast API
      description: This endpoint handles webhook notifications from Forecast.it API
      tags:
        - ForecastWebhook
      parameters:
        - in: query
          name: forecastWebhookKey
          required: true
          schema:
            type: string
          description: key to authenticate incoming webhooks
      requestBody:
        description: Webhook content
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ForecastWebhookEvent'
      responses:
        '204':
          description: Webhook notification processed successfully.
        "default":
          description: Invalid request was sent to the server.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"


  /v1/synchronize:
    post:
      operationId: synchronizeTimeEntries
      summary: Synchronizes time entries from Forecast API.
      description: Retrieves and synchronizes time entries from Forecast API.
      tags:
        - Synchronize
      parameters:
        - name: before
          required: false
          in: query
          description: Synchronizes before given date.
          schema:
            type: string
            format: date
        - name: after
          required: false
          in: query
          description: Synchronizes after given date.
          schema:
            type: string
            format: date
        - name: syncDeleted
          required: true
          in: query
          description: Synchronizes deleted time entries
          schema:
            type: boolean
            default: false
      responses:
        "204":
          description: Synchronized time entries from Forecast API.
        "default":
          description: Invalid request was sent to the server.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /v1/persons/{personId}/total:
    get:
      operationId: listPersonTotalTime
      summary: Lists persons total time entries.
      description: Lists persons total time entries.
      tags:
        - Persons
      parameters:
        - name: personId
          required: true
          in: path
          schema:
            type: integer
            format: int32
        - name: timespan
          required: false
          in: query
          description: Default value is ALL_TIME.
          schema:
            $ref: "#/components/schemas/Timespan"
        - name: before
          required: false
          in: query
          description: Retrieve time entries before given date.
          schema:
            type: string
            format: date
        - name: after
          required: false
          in: query
          description: Retrieve time entries after given date.
          schema:
            type: string
            format: date
      responses:
        "200":
          description: |-
            When getting total from all the time,
                              _id field will be null, otherwise it will be
                              combination of year and month or year and week
                              depending on timespan parameter
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/PersonTotalTime"
        "default":
          description: Invalid request was sent to the server.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /v1/vacationsRequests:
    get:
      operationId: listVacationRequests
      summary: List vacation requests
      description: Lists persisted vacation requests
      tags:
        - VacationRequests
      parameters:
        - name: personId
          required: false
          in: query
          description: Filter by persons unique ID
          schema:
            type: string
            format: uuid
        - name: before
          required: false
          in: query
          description: Retrieve vacation requests before given date.
          schema:
            type: string
            format: date
        - name: after
          required: false
          in: query
          description: Retrieve vacation requests after given date.
          schema:
            type: string
            format: date
        - name: draft
          required: false
          in: query
          description: Filter Vacation Requests by draft state
          schema:
            type: boolean
      responses:
        '200':
          description: List of vacation requests.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/VacationRequest'
        "default":
          description: Invalid request was sent to the server.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Error"
    post:
      operationId: createVacationRequest
      summary: Post a new vacation request
      description: Add new vacation request
      tags:
        - VacationRequests
      requestBody:
        description: New vacation request
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VacationRequest'
      responses:
        '201':
          description: created new vacation request
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/VacationRequest'
        "default":
          description: Invalid request was sent to the server.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /v1/vacationsRequests/{id}:
    get:
      operationId: findVacationRequest
      summary: Finds vacation request
      description: Finds persisted vacation request
      tags:
        - VacationRequests
      parameters:
        - name: id
          required: true
          in: path
          description: VacationRequest id
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Found vacation request.
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/VacationRequest'
        "default":
          description: Invalid request was sent to the server.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Error"
    put:
      operationId: updateVacationRequest
      summary: Updates vacation request
      description: Update vacation request
      tags:
        - VacationRequests
      parameters:
        - name: id
          required: true
          in: path
          description: VacationRequest id
          schema:
            type: string
            format: uuid
      requestBody:
        description: Updated vacation request
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VacationRequest'
      responses:
        '200':
          description: created new vacation request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VacationRequest'
        "default":
          description: Invalid request was sent to the server.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      operationId: deleteVacationRequest
      summary: Delete a vacation request.
      description: Deletes a vacation request.
      tags:
        - VacationRequests
      parameters:
        - name: id
          required: true
          in: path
          description: VacationRequest id
          schema:
            type: string
            format: uuid
      responses:
        "204":
          description: Empty response indicating successful removal.
        "default":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /v1/vacationRequests/{id}/statuses:
    get:
      operationId: listVacationRequestStatuses
      summary: List vacation requests statuses
      description: List vacation requests statuses
      tags:
        - VacationRequestStatus
      parameters:
        - name: id
          required: true
          in: path
          description: VacationRequest id
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: List of vacation requests.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/VacationRequestStatus'
        "default":
          description: Invalid request was sent to the server.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Error"
    post:
      operationId: createVacationRequestStatus
      summary: Post a new vacation request status
      description: Add new vacation request status
      tags:
        - VacationRequestStatus
      parameters:
        - name: id
          required: true
          in: path
          description: VacationRequest id
          schema:
            type: string
            format: uuid
      requestBody:
        description: New vacation request status
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VacationRequestStatus'
      responses:
        '201':
          description: created new vacation request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VacationRequestStatus'
        "default":
          description: Invalid request was sent to the server.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /v1/vacationRequests/{id}/statuses/{statusId}:
    get:
      operationId: findVacationRequestStatus
      summary: Finds vacation request status
      description: Finds persisted vacation request status
      tags:
        - VacationRequestStatus
      parameters:
        - name: id
          required: true
          in: path
          description: VacationRequest id
          schema:
            type: string
            format: uuid
        - name: statusId
          required: true
          in: path
          description: VacationRequestStatus id
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Found vacation request status.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VacationRequestStatus'
        "default":
          description: Invalid request was sent to the server.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Error"
    put:
      operationId: updateVacationRequestStatus
      summary: Updates vacation request status
      description: Update vacation request status
      tags:
        - VacationRequestStatus
      parameters:
        - name: id
          required: true
          in: path
          description: VacationRequest id
          schema:
            type: string
            format: uuid
        - name: statusId
          required: true
          in: path
          description: VacationRequestStatus id
          schema:
            type: string
            format: uuid
      requestBody:
        description: Updated vacation request
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VacationRequestStatus'
      responses:
        '200':
          description: created new vacation request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VacationRequestStatus'
        "default":
          description: Invalid request was sent to the server.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      operationId: deleteVacationRequestStatus
      summary: Delete a vacation request status.
      description: Deletes a vacation requests status.
      tags:
        - VacationRequestStatus
      parameters:
        - name: id
          required: true
          in: path
          description: VacationRequestStatus id
          schema:
            type: string
            format: uuid
        - name: statusId
          required: true
          in: path
          description: VacationRequestStatus id
          schema:
            type: string
            format: uuid
      responses:
        "204":
          description: Empty response indicating successful removal.
        "default":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

components:

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:

    Error:
      type: object
      description: Error object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
          description: Error code
        message:
          type: string
          description: Error message

    Timespan:
      type: string
      description: Enum for timespan
      enum:
        - ALL_TIME
        - YEAR
        - MONTH
        - WEEK


    User:
      type: object
      description: User Data
      required:
        - id
        - firstName
        - lastName
        - isActive
      properties:
        id:
          type: string
          format: uuid
          description: Person ID in Keycloak.
        firstName:
          type: string
          description: Person first name.
        lastName:
          type: string
          description: Person last name.
        email:
          type: string
          description: Person email.
        isActive:
          type: boolean
          description: Defining is person active e.g. is employed.
        severaGuid:
          type: string
          description: Persons GUID in Severa
        forecastId:
          type: integer
          format: int32
          description: Persons ID in Forecast. Used for keeping a reference of Forecast based TimeEntries and Users.

    Person:
      type: object
      description: Person Data from Forecast API
      deprecated: true
      required:
        - id
        - firstName
        - lastName
        - email
        - monday
        - tuesday
        - wednesday
        - thursday
        - friday
        - saturday
        - sunday
        - active
        - unspentVacations
        - spentVacations
        - minimumBillableRate
      properties:
        id:
          type: integer
          format: int32
          description: Person ID in Forecast.
        firstName:
          type: string
          description: Person first name.
        lastName:
          type: string
          description: Person last name.
        email:
          type: string
          description: Person email.
        monday:
          type: integer
          format: int32
          description: Persons expected working hours in minutes.
        tuesday:
          type: integer
          format: int32
          description: Persons expected working hours in minutes.
        wednesday:
          type: integer
          format: int32
          description: Persons expected working hours in minutes.
        thursday:
          type: integer
          format: int32
          description: Persons expected working hours in minutes.
        friday:
          type: integer
          format: int32
          description: Persons expected working hours in minutes.
        saturday:
          type: integer
          format: int32
          description: Persons expected working hours in minutes.
        sunday:
          type: integer
          format: int32
          description: Persons expected working hours in minutes.
        active:
          type: boolean
          description: Defining is person active e.g. is employeed.
        language:
          type: string
          description: Persons language
        startDate:
          type: string
          description: Start date of employment, String.
        unspentVacations:
          type: integer
          format: int32
          description: Amount of unspent vacations from last year.
        spentVacations:
          type: integer
          format: int32
          description: Amount of spent vacations from last year.
        minimumBillableRate:
          type: integer
          format: int32
          description: Persons minimum billable rate
        keycloakId:
          type: string
          format: uuid
          description: PersonId in keycloak

    DailyEntry:
      type: object
      description: Person's daily entry
      required:
        - person
        - internalTime
        - billableProjectTime
        - nonBillableProjectTime
        - logged
        - loggedProjectTime
        - expected
        - balance
        - date
        - isVacation
      properties:
        person:
          type: integer
          format: int32
          description: Person ID in Forecast
        internalTime:
          type: integer
          format: int32
          description: Amount of internal time per daily entry
        billableProjectTime:
          type: integer
          format: int32
          description: Amount of billable project time per daily entry
        nonBillableProjectTime:
          type: integer
          format: int32
          description: Amount of non billable project time per daily entry
        logged:
          type: integer
          format: int32
          description: Amount of time logged per daily entry
        loggedProjectTime:
          type: integer
          format: int32
          description: Amount of project time logged per daily entry
        expected:
          type: integer
          format: int32
          description: Amount of time expected per daily entry
        balance:
          type: integer
          format: int32
          description: Total amount of worktime per daily entry
        date:
          type: string
          format: date
          description: Date of daily entry
        isVacation:
          type: boolean
          description: Is daily entry vacation or not

    PersonTotalTime:
      type: object
      description: Person's total time
      required:
        - balance
        - logged
        - loggedProjectTime
        - expected
        - internalTime
        - billableProjectTime
        - nonBillableProjectTime
      properties:
        personId:
          type: integer
          format: int32
        balance:
          type: integer
          format: int32
          description: Difference between expected and logged time.
        logged:
          type: integer
          format: int32
          description: Total amount logged time of person.
        loggedProjectTime:
          type: integer
          format: int32
          description: Total amount of project time logged of person.
        expected:
          type: integer
          format: int32
          description: Total amount expected time of person.
        internalTime:
          type: integer
          format: int32
          description: Total amount of internal time of person.
        billableProjectTime:
          type: integer
          format: int32
          description: Total amount of billable project time of person.
        nonBillableProjectTime:
          type: integer
          format: int32
          description: Total amount of non billable project time of person.
        timePeriod:
          type: string
          description: String identifying the relevant year/month/week for the requested period of time total.

    TimeEntry:
      type: object
      description: Person's single time entry
      required:
        - id
        - person
        - internalTime
        - billableProjectTime
        - nonBillableProjectTime
        - date
        - createdAt
        - updatedAt
        - isVacation
      properties:
        id:
          type: string
          format: uuid
          description: ID of DailyEntry in UUID
        forecastId:
          type: integer
          format: int32
          nullable: true
          description: TimeEntry ID in Forecast
        person:
          type: integer
          format: int32
          description: Person ID in Forecast
        internalTime:
          type: integer
          format: int32
          description: Amount of internal time per time entry
        billableProjectTime:
          type: integer
          format: int32
          description: Amount of billable project time per time entry
        nonBillableProjectTime:
          type: integer
          format: int32
          description: Amount of non billable project time per time entry
        date:
          type: string
          format: date
          description: Date of time entry
        createdAt:
          type: string
          format: date-time
          description: Date time of time entry registration
        updatedAt:
          type: string
          format: date-time
          description: Date time of time entry update
        isVacation:
          type: boolean
          description: Is time entry vacation or not

    VacationType:
      type: string
      description: Enum for vacation type
      enum:
        - VACATION
        - UNPAID_TIME_OFF
        - SICKNESS
        - PERSONAL_DAYS
        - MATERNITY_PATERNITY
        - CHILD_SICKNESS

    VacationRequestStatuses:
      type: string
      description: Enum for vacation request status
      enum:
        - PENDING
        - APPROVED
        - DECLINED

    VacationRequest:
      type: object
      description: Person's single vacation request
      required:
        - person
        - days
        - startDate
        - endDate
        - type
        - message
        - createdAt
        - updatedAt
        - draft
      properties:
        id:
          type: string
          format: uuid
          description: ID of vacation request in UUID
          default: null
        personId:
          type: string
          format: uuid
          description: Person keycloak ID in UUID
        draft:
          type: boolean
          description: Draft state
        startDate:
          type: string
          format: date
          description: Date of vacation start
        endDate:
          type: string
          format: date
          description: Date of vacation end
        days:
          type: integer
          format: int32
          description: Vacation days used for requested vacation
        type:
          $ref: "#/components/schemas/VacationType"
        message:
          type: string
          description: Message attached to request
        createdBy:
          type: string
          format: uuid
          description: ID of person who created status in UUID
        createdAt:
          type: string
          format: date-time
          description: Date time of vacation request registration
        updatedAt:
          type: string
          format: date-time
          description: Date time of vacation request update

    VacationRequestStatus:
      type: object
      description: singular vacation request status
      required:
        - status
      properties:
        id:
          type: string
          format: uuid
          description: ID of vacation request status in UUID
          default: null
        vacationRequestId:
          type: string
          format: uuid
          description: ID of vacation request in UUID
          default: null
        status:
           $ref: "#/components/schemas/VacationRequestStatuses"
        message:
          type: string
          description: Date of vacation start
        createdAt:
          type: string
          format: date-time
          description: Date time of status registration
        createdBy:
          type: string
          format: uuid
          description: ID of person who created status in UUID
        updatedAt:
          type: string
          format: date-time
          description: Date time of status update
        updatedBy:
          type: string
          format: uuid
          description: ID of person who updated status in UUID

    ForecastWebhookEvent:
      type: object
      properties:
        timestamp:
          type: string
          example: 2021-09-23T07:30:00Z
          description: String. A UTC timestamp of when the event happened
        event:
          type: string
          example: task_deleted
          description: String. A string consisting of the type of object and the type of event.
        object:
          $ref: '#/components/schemas/ForecastWebhookObject'
        person:
          $ref: '#/components/schemas/ForecastWebhookPerson'

    ForecastWebhookObject:
      type: object
      required:
        - id
      properties:
        id:
          type: integer
          format: int32
          example: 1
          description: Integer. The id of the object in question.

    ForecastWebhookPerson:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
          description: Integer. The id of the person who triggered the event in Forecast